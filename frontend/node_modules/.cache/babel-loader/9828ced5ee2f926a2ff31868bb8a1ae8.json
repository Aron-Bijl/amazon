{"ast":null,"code":"var _jsxFileName = \"/Users/aron/Desktop/code/webpage/amazon/frontend/src/screens/ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { detailsProduct, updateProduct } from '../actions/productActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProductEditScreen() {\n  _s();\n\n  const params = useParams();\n  const {\n    id: productId\n  } = params;\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [image, setImage] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState('');\n  const [brand, setBrand] = useState('');\n  const [description, setDescription] = useState('');\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (successUpdate) {\n      navigate('/productlist');\n    }\n\n    if (!product || product._id !== productId || successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      dispatch(detailsProduct(productId));\n    } else {\n      setName(product.name);\n      setPrice(product.price);\n      setImage(product.image);\n      setCategory(product.category);\n      setCountInStock(product.countInStock);\n      setBrand(product.brand);\n      setDescription(product.description);\n    }\n  }, [product, dispatch, productId, successUpdate, navigate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      image,\n      category,\n      brand,\n      countInStock,\n      description\n    }));\n  };\n\n  const [loadingUpload, setLoadingUpload] = useState(false);\n  const [errorUpload, setErrorUpload] = useState('');\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append('image', file);\n    setLoadingUpload(true);\n\n    try {\n      const {\n        data\n      } = await axios.post('/api/uploads', bodyFormData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      });\n      setImage(data);\n      setLoadingUpload(false);\n    } catch (error) {\n      setErrorUpload(error.message);\n      setLoadingUpload(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Edit Product \", productId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 35\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 27\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"price\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"price\",\n            type: \"text\",\n            placeholder: \"Enter price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"image\",\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"image\",\n            type: \"text\",\n            placeholder: \"Enter image\",\n            value: image,\n            onChange: e => setImage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"imageFile\",\n            children: \"Image file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"imageFile\",\n            label: \"Choose image\",\n            onChange: uploadFileHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), loadingUpload && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 43\n          }, this), errorUpload && /*#__PURE__*/_jsxDEV(MessageBox, {\n            variant: \"danger\",\n            children: errorUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category\",\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"category\",\n            type: \"text\",\n            placeholder: \"Enter category\",\n            value: category,\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"brand\",\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"brand\",\n            type: \"text\",\n            placeholder: \"Enter brand\",\n            value: brand,\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"countInStock\",\n            children: \"Count in stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"countInStock\",\n            type: \"text\",\n            placeholder: \"Enter count in stock\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            rows: \"3\",\n            type: \"text\",\n            placeholder: \"Enter description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"primary\",\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductEditScreen, \"0C82VfgBX30MPno8N3Bw4T5pDT4=\", false, function () {\n  return [useParams, useSelector, useSelector, useDispatch, useNavigate, useSelector];\n});\n\n_c = ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["/Users/aron/Desktop/code/webpage/amazon/frontend/src/screens/ProductEditScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useNavigate","useParams","axios","detailsProduct","updateProduct","LoadingBox","MessageBox","PRODUCT_UPDATE_RESET","ProductEditScreen","params","id","productId","name","setName","price","setPrice","image","setImage","category","setCategory","countInStock","setCountInStock","brand","setBrand","description","setDescription","productDetails","state","loading","error","product","productUpdate","loadingUpdate","errorUpdate","success","successUpdate","dispatch","navigate","_id","type","submitHandler","e","preventDefault","loadingUpload","setLoadingUpload","errorUpload","setErrorUpload","userSignin","userInfo","uploadFileHandler","file","target","files","bodyFormData","FormData","append","data","post","headers","Authorization","token","message","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { detailsProduct, updateProduct } from '../actions/productActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\n\nexport default function ProductEditScreen(){\n    const params = useParams();\n    const { id: productId } = params;\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState('');\n    const [image, setImage] = useState('');\n    const [category, setCategory] = useState('');\n    const [countInStock, setCountInStock] = useState('');\n    const [brand, setBrand] = useState('');\n    const [description, setDescription] = useState('');\n    const productDetails = useSelector(state => state.productDetails);\n    const { loading, error, product } = productDetails;\n    const productUpdate = useSelector(state => state.productUpdate);\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate;\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if (successUpdate) {\n          navigate('/productlist');\n        }\n        if (!product || product._id !== productId || successUpdate) {\n          dispatch({ type: PRODUCT_UPDATE_RESET });\n          dispatch(detailsProduct(productId));\n        } else {\n          setName(product.name);\n          setPrice(product.price);\n          setImage(product.image);\n          setCategory(product.category);\n          setCountInStock(product.countInStock);\n          setBrand(product.brand);\n          setDescription(product.description);\n        }\n      }, [product, dispatch, productId, successUpdate, navigate]);\n\n      const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(\n          updateProduct({\n            _id: productId,\n            name,\n            price,\n            image,\n            category,\n            brand,\n            countInStock,\n            description,\n          })\n        );\n      };\n\n      const  [loadingUpload, setLoadingUpload] = useState(false);\n      const [errorUpload, setErrorUpload] = useState('');\n      const userSignin = useSelector(state => state.userSignin);\n      const { userInfo } = userSignin;\n      const uploadFileHandler = async(e) => {\n          const file = e.target.files[0];\n          const bodyFormData = new FormData();\n          bodyFormData.append('image', file);\n          setLoadingUpload(true);\n          try {\n              const { data } = await axios.post('/api/uploads', bodyFormData, {\n                  headers: {'Content-Type': 'multipart/form-data',\n                Authorization: `Bearer ${userInfo.token}`\n                },\n              });\n              setImage(data);\n              setLoadingUpload(false);\n          } catch (error) {\n              setErrorUpload(error.message)\n              setLoadingUpload(false);\n          }\n      };\n\n    return (\n        <div>\n            <form className='form' onSubmit={submitHandler}>\n                <div>\n                    <h1>Edit Product {productId}</h1>\n                </div>\n                {loadingUpdate && <LoadingBox></LoadingBox>}\n                {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\n                {loading? <LoadingBox></LoadingBox>\n                :\n                error? <MessageBox variant=\"danger\">{error}</MessageBox>\n                :\n                <>\n                    <div>\n                        <label htmlFor='name'>Name</label>\n                        <input id=\"name\" type=\"text\" placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)}>\n                        </input>\n                    </div>\n                    <div>\n                        <label htmlFor='price'>Price</label>\n                        <input id=\"price\" type=\"text\" placeholder='Enter price' value={price} onChange={(e) => setPrice(e.target.value)}>\n                        </input>\n                    </div>\n                    <div>\n                        <label htmlFor='image'>Image</label>\n                        <input id=\"image\" type=\"text\" placeholder='Enter image' value={image} onChange={(e) => setImage(e.target.value)}>\n                        </input>\n                    </div>\n                    <div>\n                        <label htmlFor='imageFile'>Image file</label>\n                        <input type='file' id=\"imageFile\" label=\"Choose image\" onChange={uploadFileHandler}></input>\n                        {loadingUpload && <LoadingBox></LoadingBox>}\n                        {errorUpload && <MessageBox variant=\"danger\">{errorUpload}</MessageBox>}\n                    </div>\n                    <div>\n                        <label htmlFor='category'>Category</label>\n                        <input id=\"category\" type=\"text\" placeholder='Enter category' value={category} onChange={(e) => setCategory(e.target.value)}>\n                        </input>\n                    </div>\n                    <div>\n                        <label htmlFor='brand'>Brand</label>\n                        <input id=\"brand\" type=\"text\" placeholder='Enter brand' value={brand} onChange={(e) => setBrand(e.target.value)}>\n                        </input>\n                    </div>\n                    <div>\n                        <label htmlFor='countInStock'>Count in stock</label>\n                        <input id=\"countInStock\" type=\"text\" placeholder='Enter count in stock' value={countInStock} onChange={(e) => setCountInStock(e.target.value)}>\n                        </input>\n                    </div>\n                    <div>\n                        <label htmlFor='description'>Description</label>\n                        <textarea id=\"description\" rows='3' type=\"text\" placeholder='Enter description' value={description} onChange={(e) => setDescription(e.target.value)}>\n                        </textarea>\n                    </div>\n                    <div>\n                        <label></label>\n                        <button className='primary' type=\"submit\">\n                            Update\n                        </button>\n                    </div>\n                </>\n            }\n            </form>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}