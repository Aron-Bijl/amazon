{"ast":null,"code":"var _jsxFileName = \"/Users/aron/Desktop/code/webpage/amazon/frontend/src/screens/UserListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listUsers } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function UserListScreen() {\n  _s();\n\n  const userList = useSelector(state => state.userList);\n  const {\n    loading,\n    error,\n    users\n  } = userList;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(listUsers());\n  }, [dispatch]);\n\n  const deleteHandler = user => {\n    if (window.confirm('Are you sure?')) {\n      dispatch(deleteUser(user._id));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 27\n    }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Is Seller\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Is Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.isSeller ? 'YES' : 'NO'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.isAdmin ? 'YES' : 'NO'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"small\",\n              onClick: () => deleteHandler(user),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 38\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 34\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserListScreen, \"HxBZaw67HVQGku/Nc5FuCuo2gL8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = UserListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserListScreen\");","map":{"version":3,"sources":["/Users/aron/Desktop/code/webpage/amazon/frontend/src/screens/UserListScreen.js"],"names":["React","useEffect","useDispatch","useSelector","listUsers","LoadingBox","MessageBox","UserListScreen","userList","state","loading","error","users","dispatch","deleteHandler","user","window","confirm","deleteUser","_id","map","name","email","isSeller","isAdmin"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listUsers } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\n\nexport function UserListScreen (){\n    const  userList = useSelector(state => state.userList);\n    const { loading, error, users } = userList;\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(listUsers());\n    }, [dispatch]);\n    const deleteHandler = (user) => {\n        if(window.confirm('Are you sure?')){\n            dispatch(deleteUser(user._id));\n        }\n    }\n    return(\n        <div>\n            <h1>Users</h1>\n            {\n                loading? (<LoadingBox></LoadingBox>)\n                :\n                error? (<MessageBox variant=\"danger\">{error}</MessageBox>)\n                :\n                (\n                    <table className='table'>\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>Name</th>\n                                <th>Email</th>\n                                <th>Is Seller</th>\n                                <th>Is Admin</th>\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                             {users.map((user) => (\n                                 <tr key={user._id}>\n                                     <td>{user._id}</td>\n                                     <td>{user.name}</td>\n                                     <td>{user.email}</td>\n                                     <td>{user.isSeller ? 'YES' : 'NO'}</td>\n                                     <td>{user.isAdmin ? 'YES' : 'NO'}</td>\n                                     <td>\n                                         <button>Edit</button>\n                                         <button type=\"button\" className='small' onClick={() => deleteHandler(user)}>Delete</button>\n                                     </td>\n                                 </tr>\n                             ))}\n                        </tbody>\n                    </table>\n                )\n            }\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}