{"ast":null,"code":"var _jsxFileName = \"/Users/aron/Desktop/code/webpage/amazon/frontend/src/screens/UserEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { detailsUser, updateUser } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserEditScreen(props) {\n  _s();\n\n  const params = useParams();\n  const {\n    id: userId\n  } = params;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isSeller, setIsSeller] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  useEffect(() => {\n    if (!user) {\n      dispatch(detailsUser(userId));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setIsSeller(user.isSeller);\n      setIsAdmin(user.isAdmin);\n    }\n  }, [dispatch, user, userId]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateUser({\n      _id: userId,\n      name,\n      email,\n      isSeller,\n      isAdmin\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Edit User \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 32\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"isSeller\",\n            children: \"Is Seller\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"isSeller\",\n            type: \"checkbox\",\n            checked: isSeller,\n            onChange: e => setIsSeller(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"isAdmin\",\n            children: \"Is Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"isAdmin\",\n            type: \"checkbox\",\n            checked: isAdmin,\n            onChange: e => setIsAdmin(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"primary\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserEditScreen, \"0Spnw3ruNCx8anvbdz7AhiqTnCI=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"sources":["/Users/aron/Desktop/code/webpage/amazon/frontend/src/screens/UserEditScreen.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useParams","detailsUser","updateUser","LoadingBox","MessageBox","UserEditScreen","props","params","id","userId","name","setName","email","setEmail","isSeller","setIsSeller","isAdmin","setIsAdmin","dispatch","userDetails","state","loading","error","user","submitHandler","e","preventDefault","_id","target","value","checked"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,wBAAxC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC1C,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM;AAAEQ,IAAAA,EAAE,EAAEC;AAAN,MAAiBF,MAAvB;AAEA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMqB,QAAQ,GAAGpB,WAAW,EAA5B;AACA,QAAMqB,WAAW,GAAGpB,WAAW,CAACqB,KAAK,IAAIA,KAAK,CAACD,WAAhB,CAA/B;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BJ,WAAjC;AAEAvB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAAC2B,IAAJ,EAAS;AACLL,MAAAA,QAAQ,CAACjB,WAAW,CAACQ,MAAD,CAAZ,CAAR;AACH,KAFD,MAGI;AACAE,MAAAA,OAAO,CAACY,IAAI,CAACb,IAAN,CAAP;AACAG,MAAAA,QAAQ,CAACU,IAAI,CAACX,KAAN,CAAR;AACAG,MAAAA,WAAW,CAACQ,IAAI,CAACT,QAAN,CAAX;AACAG,MAAAA,UAAU,CAACM,IAAI,CAACP,OAAN,CAAV;AACH;AACJ,GAVQ,EAUN,CAACE,QAAD,EAAWK,IAAX,EAAiBd,MAAjB,CAVM,CAAT;;AAYA,QAAMe,aAAa,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAR,IAAAA,QAAQ,CAAChB,UAAU,CAAC;AAACyB,MAAAA,GAAG,EAAElB,MAAN;AAAcC,MAAAA,IAAd;AAAoBE,MAAAA,KAApB;AAA2BE,MAAAA,QAA3B;AAAqCE,MAAAA;AAArC,KAAD,CAAX,CAAR;AACH,GAHD;;AAKA,sBACI;AAAA,2BACI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAEQ,aAAjC;AAAA,8BACI;AAAA,+BACI;AAAA,mCAAed,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAKQW,OAAO,gBAAI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAAJ,GAEPC,KAAK,gBAAI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,QAApB;AAAA,kBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,cAAJ,gBAEL;AAAA,gCACA;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,EAAE,EAAC,MAAV;AAAiB,YAAA,IAAI,EAAC,MAAtB;AAA6B,YAAA,WAAW,EAAC,YAAzC;AAAsD,YAAA,KAAK,EAAEZ,IAA7D;AAAmE,YAAA,QAAQ,EAAGe,CAAD,IAAOd,OAAO,CAACc,CAAC,CAACG,MAAF,CAASC,KAAV;AAA3F;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAKA;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,EAAE,EAAC,OAAV;AAAkB,YAAA,IAAI,EAAC,OAAvB;AAA+B,YAAA,WAAW,EAAC,aAA3C;AAAyD,YAAA,KAAK,EAAEjB,KAAhE;AAAuE,YAAA,QAAQ,EAAGa,CAAD,IAAOZ,QAAQ,CAACY,CAAC,CAACG,MAAF,CAASC,KAAV;AAAhG;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALA,eASA;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,EAAE,EAAC,UAAV;AAAqB,YAAA,IAAI,EAAC,UAA1B;AAAqC,YAAA,OAAO,EAAEf,QAA9C;AAAwD,YAAA,QAAQ,EAAGW,CAAD,IAAOV,WAAW,CAACU,CAAC,CAACG,MAAF,CAASE,OAAV;AAApF;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATA,eAaA;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,EAAE,EAAC,SAAV;AAAoB,YAAA,IAAI,EAAC,UAAzB;AAAoC,YAAA,OAAO,EAAEd,OAA7C;AAAsD,YAAA,QAAQ,EAAGS,CAAD,IAAOR,UAAU,CAACQ,CAAC,CAACG,MAAF,CAASE,OAAV;AAAjF;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbA,eAiBA;AAAA,iCACI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAjBA;AAAA,sBATR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH;;GApEuBzB,c;UACLL,S,EAQEF,W,EACGC,W;;;KAVAM,c","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { detailsUser, updateUser } from '../actions/userActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\n\nexport default function UserEditScreen(props) {\n    const params = useParams();\n    const { id: userId } = params;\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [isSeller, setIsSeller] = useState(false);\n    const [isAdmin, setIsAdmin] = useState(false);\n\n    const dispatch = useDispatch();\n    const userDetails = useSelector(state => state.userDetails);\n    const { loading, error, user } = userDetails;\n\n    useEffect(() => {\n        if(!user){\n            dispatch(detailsUser(userId));\n        }\n        else{\n            setName(user.name);\n            setEmail(user.email);\n            setIsSeller(user.isSeller);\n            setIsAdmin(user.isAdmin);\n        }\n    }, [dispatch, user, userId]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(updateUser({_id: userId, name, email, isSeller, isAdmin}));\n    }\n    \n    return(\n        <div>\n            <form className='form' onSubmit={submitHandler}>\n                <div>\n                    <h1>Edit User {name}</h1>\n                </div>\n                {\n                    loading ? (<LoadingBox></LoadingBox>)\n                    :\n                    error ? (<MessageBox variant='danger'>{error}</MessageBox>)\n                    :\n                    <>\n                    <div>\n                        <label htmlFor='name'>Name</label>\n                        <input id='name' type='text' placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)}></input>\n                    </div>\n                    <div>\n                        <label htmlFor='email'>Email</label>\n                        <input id='email' type='email' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></input>\n                    </div>\n                    <div>\n                        <label htmlFor='isSeller'>Is Seller</label>\n                        <input id='isSeller' type='checkbox' checked={isSeller} onChange={(e) => setIsSeller(e.target.checked)}></input>\n                    </div>\n                    <div>\n                        <label htmlFor='isAdmin'>Is Admin</label>\n                        <input id='isAdmin' type='checkbox' checked={isAdmin} onChange={(e) => setIsAdmin(e.target.checked)}></input>\n                    </div>\n                    <div>\n                        <button type=\"submit\" className='primary'>\n                            Update\n                        </button>\n                    </div>\n                    </>\n                }\n            </form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}