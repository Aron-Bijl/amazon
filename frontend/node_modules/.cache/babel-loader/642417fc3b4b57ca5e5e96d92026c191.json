{"ast":null,"code":"import axios from \"axios\";\nimport Axios from \"axios\";\nimport { CART_EMPTY } from \"../constants/cartConstants\";\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DELETE_FAIL, ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_MINE_LIST_FAIL, ORDER_MINE_LIST_REQUEST, ORDER_MINE_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS } from \"../constants/orderConstants\";\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post('/api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_PAY_REQUEST,\n    payload: {\n      order,\n      paymentResult\n    }\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrderMine = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_MINE_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get('/api/orders/mine', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_MINE_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_MINE_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrders = _ref => {\n  let {\n    seller = ''\n  } = _ref;\n  return async (dispatch, getState) => {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    try {\n      const {\n        data\n      } = await axios.get(`/api/orders?seller=${seller}`, {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`\n        }\n      });\n      console.log(data);\n      dispatch({\n        type: ORDER_LIST_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n      dispatch({\n        type: ORDER_LIST_FAIL,\n        payload: message\n      });\n    }\n  };\n};\nexport const deleteOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DELETE_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = axios.delete(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deliverOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DELIVER_REQUEST,\n    payload: {\n      orderId\n    }\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = axios.put(`/api/orders/${orderId}/deliver`, {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message\n    });\n  }\n};\nexport const summaryOrder = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_SUMMARY_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get('/api/orders/summary', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_SUMMARY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_SUMMARY_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/aron/Desktop/code/webpage/amazon/frontend/src/actions/orderActions.js"],"names":["axios","Axios","CART_EMPTY","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DELETE_FAIL","ORDER_DELETE_REQUEST","ORDER_DELETE_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_MINE_LIST_FAIL","ORDER_MINE_LIST_REQUEST","ORDER_MINE_LIST_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message","detailsOrder","orderId","get","payOrder","paymentResult","put","_id","listOrderMine","listOrders","seller","console","log","deleteOrder","delete","deliverOrder","summaryOrder","ORDER_SUMMARY_REQUEST","ORDER_SUMMARY_SUCCESS","ORDER_SUMMARY_FAIL"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport  Axios from \"axios\";\nimport { CART_EMPTY } from \"../constants/cartConstants\";\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DELETE_FAIL, ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_MINE_LIST_FAIL, ORDER_MINE_LIST_REQUEST, ORDER_MINE_LIST_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS} from \"../constants/orderConstants\"\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    dispatch({type: ORDER_CREATE_REQUEST, payload: order});\n    try {\n        const {userSignin: {userInfo}} = getState();\n        const { data } = await Axios.post('/api/orders', order, {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        });\n        dispatch({type: ORDER_CREATE_SUCCESS, payload: data.order});\n        dispatch({type: CART_EMPTY});\n        localStorage.removeItem('cartItems');\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL, \n            payload: \n                error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message, \n        });\n    }\n};\n\nexport const detailsOrder = (orderId) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await Axios.get(`/api/orders/${orderId}`, {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: ORDER_DETAILS_FAIL, payload: message });\n    }\n  };\n\n  export const payOrder = (order, paymentResult) => async (dispatch, getState) => {\n      dispatch({ type: ORDER_PAY_REQUEST, payload: {order, paymentResult}});\n    const { userSignin: { userInfo } } = getState();\n    try {\n        const { data } = axios.put(`/api/orders/${order._id}/pay`, paymentResult, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({ type: ORDER_PAY_SUCCESS, payload: data});\n    } catch (error) {\n        const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: ORDER_PAY_FAIL, payload: message });\n    }\n  }\n\n  export const listOrderMine = () => async (dispatch, getState) => {\n    dispatch({type: ORDER_MINE_LIST_REQUEST });\n    const { userSignin: { userInfo } } = getState();\n    try {\n        const { data } = await axios.get('/api/orders/mine', {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        });\n        dispatch({type: ORDER_MINE_LIST_SUCCESS, payload: data});\n    } catch (error) {\n        const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n        dispatch({type: ORDER_MINE_LIST_FAIL, payload: message});\n    }\n  }\n\n  export const listOrders = ({ seller = '' }) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_LIST_REQUEST });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await axios.get(`/api/orders?seller=${seller}`, {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n      console.log(data);\n      dispatch({ type: ORDER_LIST_SUCCESS, payload: data });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: ORDER_LIST_FAIL, payload: message });\n    }\n  };\n\n  export const deleteOrder = (orderId) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_DELETE_REQUEST, payload: orderId });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = axios.delete(`/api/orders/${orderId}`, {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: ORDER_DELETE_SUCCESS, payload: data });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: ORDER_DELETE_FAIL, payload: message });\n    }\n  };\n\n  export const deliverOrder = (orderId) => async (dispatch, getState) => {\n    dispatch({ type: ORDER_DELIVER_REQUEST, payload: {orderId}});\n  const { userSignin: { userInfo } } = getState();\n  try {\n      const { data } = axios.put(`/api/orders/${orderId}/deliver`, {}, {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: ORDER_DELIVER_SUCCESS, payload: data});\n  } catch (error) {\n      const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: ORDER_DELIVER_FAIL, payload: message });\n  }\n};\n\nexport const summaryOrder = () => async (dispatch, getState) => {\n    dispatch({ type: ORDER_SUMMARY_REQUEST });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await axios.get('/api/orders/summary', {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: ORDER_SUMMARY_SUCCESS, payload: data })\n    } catch (error) {\n      const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n      dispatch({ type: ORDER_SUMMARY_FAIL, payload: message });\n    }\n};"]},"metadata":{},"sourceType":"module"}