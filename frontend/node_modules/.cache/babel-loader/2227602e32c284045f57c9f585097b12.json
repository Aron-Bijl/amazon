{"ast":null,"code":"import axios from \"axios\";\nimport { USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT, USER_UPDATE_FAIL, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS } from \"../constants/userConstant\";\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};\nexport const detailsUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DETAILS_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  dispatch({\n    type: USER_UPDATE_PROFILE_REQUEST,\n    payload: user\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  dispatch({\n    type: USER_UPDATE_REQUEST,\n    payload: user\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.put(`/api/users/${user._id}`, user, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  dispatch({\n    type: USER_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.get('/api/users', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteUser = userId => async (dispatch, getState) => {\n  dispatch({\n    type: USER_DELETE_REQUEST,\n    payload: userId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await axios.delete(`/api/users/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/aron/Desktop/code/webpage/amazon/frontend/src/actions/userActions.js"],"names":["axios","USER_DELETE_FAIL","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_LIST_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","USER_UPDATE_FAIL","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","signin","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","register","name","signout","removeItem","detailsUser","userId","getState","userSignin","userInfo","get","headers","Authorization","token","updateUserProfile","user","put","updateUser","_id","listUsers","deleteUser","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { \n    USER_DELETE_FAIL,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DETAILS_FAIL, \n    USER_DETAILS_REQUEST, \n    USER_DETAILS_SUCCESS, \n    USER_LIST_FAIL, \n    USER_LIST_REQUEST, \n    USER_LIST_SUCCESS, \n    USER_REGISTER_FAIL, \n    USER_REGISTER_REQUEST, \n    USER_REGISTER_SUCCESS, \n    USER_SIGNIN_FAIL, \n    USER_SIGNIN_REQUEST, \n    USER_SIGNIN_SUCCESS, \n    USER_SIGNOUT, \n    USER_UPDATE_FAIL, \n    USER_UPDATE_PROFILE_FAIL, \n    USER_UPDATE_PROFILE_REQUEST, \n    USER_UPDATE_PROFILE_SUCCESS, \n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS\n} from \"../constants/userConstant\"\n\nexport const signin = (email, password) => async (dispatch) => {\n    dispatch({type: USER_SIGNIN_REQUEST, payload: {email, password}});\n    try{\n        const {data} = await axios.post('/api/users/signin', {email, password}) \n        dispatch({type:  USER_SIGNIN_SUCCESS, payload: data});\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch(error){\n        dispatch({type: USER_SIGNIN_FAIL, payload: error.response && error.response.data.message \n            ? error.response.data.message\n            : error.message,});\n    }\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n    dispatch({type: USER_REGISTER_REQUEST, payload: {email, password}});\n    try{\n        const {data} = await axios.post('/api/users/register', {name, email, password}) \n        dispatch({type:  USER_REGISTER_SUCCESS, payload: data});\n        dispatch({type:  USER_SIGNIN_SUCCESS, payload: data});\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch(error){\n        dispatch({type: USER_REGISTER_FAIL, payload: error.response && error.response.data.message \n            ? error.response.data.message\n            : error.message,});\n    }\n};\n\n\nexport const signout = () => (dispatch) => {\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem('cartItems');\n    localStorage.removeItem('shippingAddress');\n    dispatch({type: USER_SIGNOUT});\n};\n\nexport const detailsUser = (userId) => async (dispatch, getState) => {\n    dispatch({type: USER_DETAILS_REQUEST, payload: userId});\n    const  {userSignin: {userInfo}} = getState();\n    try {\n        const { data } = await axios.get(`/api/users/${userId}`, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n        })\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n        const message = error.response && error.response.data.message \n        ? error.response.data.message\n        : error.message;\n        dispatch({type: USER_DETAILS_FAIL, payload: message})\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) =>{\n    dispatch({type: USER_UPDATE_PROFILE_REQUEST, payload: user});\n    const { userSignin: {userInfo} } = getState();\n    try {\n        const { data } = await axios.put(`/api/users/profile`, user, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({type: USER_UPDATE_PROFILE_SUCCESS, payload: data});\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        const message = error.response && error.response.data.message \n        ? error.response.data.message\n        : error.message;\n        dispatch({type: USER_UPDATE_PROFILE_FAIL, payload: message});\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) =>{\n    dispatch({type: USER_UPDATE_REQUEST, payload: user});\n    const { userSignin: {userInfo} } = getState();\n    try {\n        const { data } = await axios.put(`/api/users/${user._id}`, user, {\n            headers: { Authorization: `Bearer ${userInfo.token}` },\n        });\n        dispatch({type: USER_UPDATE_SUCCESS, payload: data});\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        const message = error.response && error.response.data.message \n        ? error.response.data.message\n        : error.message;\n        dispatch({type: USER_UPDATE_FAIL, payload: message});\n    }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n    dispatch({type: USER_LIST_REQUEST});\n    const { userSignin: {userInfo} } = getState();\n    try {\n        const { data } = await axios.get('/api/users', {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        });\n        dispatch({type: USER_LIST_SUCCESS, payload: data});\n    } catch (error) {\n        const message = error.response && error.response.data.message \n        ? error.response.data.message\n        : error.message;\n        dispatch({type: USER_LIST_FAIL, payload: message});\n    }\n}\n\nexport const deleteUser = (userId) => async (dispatch, getState) => {\n    dispatch({type: USER_DELETE_REQUEST, payload: userId});\n    const { userSignin: {userInfo} } = getState();\n    try {\n        const { data } = await axios.delete(`/api/users/${userId}`, {\n            headers: { Authorization: `Bearer ${userInfo.token}` }\n        });\n        dispatch({type: USER_DELETE_SUCCESS, payload: data});\n    } catch (error) {\n        const message = error.response && error.response.data.message \n        ? error.response.data.message\n        : error.message;\n        dispatch({type: USER_DELETE_FAIL, payload: message});\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}