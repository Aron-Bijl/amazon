{"ast":null,"code":"import axios from \"axios\";\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from \"../constants/cartConstants\";\nexport const ADD_TO_CART = (productId, qty) => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.get(`/api/products/${productId}`);\n  const {\n    cart: {\n      cartItems\n    }\n  } = getState();\n\n  if (cartItems.length > 0 && data.seller._id !== cartItems[0].seller) {\n    dispatch({\n      type: CART_ADD_ITEM_FAIL,\n      payload: \"Can't add to cart. Buy from one seller at a time\"\n    });\n  }\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      product: data._id,\n      seller: data.seller,\n      qty\n    }\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const removeFromCart = productId => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: productId\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const saveShippingAddress = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  });\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\nexport const savePaymentMethod = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  });\n};","map":{"version":3,"sources":["/Users/aron/Desktop/code/webpage/amazon/frontend/src/actions/cartActions.js"],"names":["axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_PAYMENT_METHOD","CART_SAVE_SHIPPING_ADDRESS","ADD_TO_CART","productId","qty","dispatch","getState","data","get","cart","cartItems","length","seller","_id","type","CART_ADD_ITEM_FAIL","payload","name","image","price","countInStock","product","localStorage","setItem","JSON","stringify","removeFromCart","saveShippingAddress","savePaymentMethod"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,EAA2CC,wBAA3C,EAAqEC,0BAArE,QAAsG,4BAAtG;AAGA,OAAO,MAAMC,WAAW,GAAI,CAACC,SAAD,EAAYC,GAAZ,KAAoB,OAAMC,QAAN,EAAgBC,QAAhB,KAA6B;AACzE,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMV,KAAK,CAACW,GAAN,CAAW,iBAAgBL,SAAU,EAArC,CAAvB;AACA,QAAM;AAAEM,IAAAA,IAAI,EAAE;AAACC,MAAAA;AAAD;AAAR,MAAyBJ,QAAQ,EAAvC;;AACA,MAAGI,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBJ,IAAI,CAACK,MAAL,CAAYC,GAAZ,KAAoBH,SAAS,CAAC,CAAD,CAAT,CAAaE,MAA5D,EAAmE;AAC/DP,IAAAA,QAAQ,CAAC;AAACS,MAAAA,IAAI,EAAEC,kBAAP;AAA2BC,MAAAA,OAAO,EAAE;AAApC,KAAD,CAAR;AACH;;AACDX,EAAAA,QAAQ,CAAC;AACLS,IAAAA,IAAI,EAAEhB,aADD;AAELkB,IAAAA,OAAO,EAAE;AACLC,MAAAA,IAAI,EAAEV,IAAI,CAACU,IADN;AAELC,MAAAA,KAAK,EAAEX,IAAI,CAACW,KAFP;AAGLC,MAAAA,KAAK,EAAEZ,IAAI,CAACY,KAHP;AAILC,MAAAA,YAAY,EAAEb,IAAI,CAACa,YAJd;AAKLC,MAAAA,OAAO,EAAEd,IAAI,CAACM,GALT;AAMLD,MAAAA,MAAM,EAAEL,IAAI,CAACK,MANR;AAOLR,MAAAA;AAPK;AAFJ,GAAD,CAAR;AAYAkB,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAenB,QAAQ,GAAGG,IAAX,CAAgBC,SAA/B,CAAlC;AACH,CAnBM;AAqBP,OAAO,MAAMgB,cAAc,GAAIvB,SAAD,IAAe,CAACE,QAAD,EAAWC,QAAX,KAAwB;AACjED,EAAAA,QAAQ,CAAC;AAACS,IAAAA,IAAI,EAAEf,gBAAP;AAAyBiB,IAAAA,OAAO,EAAEb;AAAlC,GAAD,CAAR;AACAmB,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAenB,QAAQ,GAAGG,IAAX,CAAgBC,SAA/B,CAAlC;AACH,CAHM;AAKP,OAAO,MAAMiB,mBAAmB,GAAIpB,IAAD,IAAWF,QAAD,IAAc;AACvDA,EAAAA,QAAQ,CAAC;AAACS,IAAAA,IAAI,EAAEb,0BAAP;AAAmCe,IAAAA,OAAO,EAAET;AAA5C,GAAD,CAAR;AACAe,EAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAelB,IAAf,CAAxC;AACH,CAHM;AAKP,OAAO,MAAMqB,iBAAiB,GAAIrB,IAAD,IAAWF,QAAD,IAAc;AACrDA,EAAAA,QAAQ,CAAC;AAAES,IAAAA,IAAI,EAAEd,wBAAR;AAAkCgB,IAAAA,OAAO,EAAET;AAA3C,GAAD,CAAR;AACD,CAFI","sourcesContent":["import axios from \"axios\";\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM , CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS} from \"../constants/cartConstants\";\n\n\nexport const ADD_TO_CART  = (productId, qty) => async(dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${productId}`);\n    const { cart: {cartItems} }  = getState();\n    if(cartItems.length > 0 && data.seller._id !== cartItems[0].seller){\n        dispatch({type: CART_ADD_ITEM_FAIL, payload: \"Can't add to cart. Buy from one seller at a time\"});\n    }\n    dispatch({\n        type: CART_ADD_ITEM, \n        payload: {\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            product: data._id,\n            seller: data.seller,\n            qty,\n        }\n    });\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeFromCart = (productId) => (dispatch, getState) => {\n    dispatch({type: CART_REMOVE_ITEM, payload: productId});\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({type: CART_SAVE_SHIPPING_ADDRESS, payload: data});\n    localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({ type: CART_SAVE_PAYMENT_METHOD, payload: data });\n  };"]},"metadata":{},"sourceType":"module"}